// Grants required for jdk1.6 combined with source=5 and target=jsr14
// I think this has something to do with the new java 6 Policy implementation,
// the visibility of our policy implementations on the boot classpath and
// jdk1.6 compiler optimisations. See River-334

grant codebase "file:${org.apache.river.jsk.home}${/}lib-ext${/}*" {
    permission java.security.AllPermission "", "";
};

// Grants required for jdk1.6 combined with source=5 and target=jsr14
// I think this has something to do with the new java 6 Policy implementation,
// the visibility of our policy implementations on the boot classpath and
// jdk1.6 compiler optimisations. See River-334
grant codebase "file:${org.apache.river.test.home}${/}lib-ext${/}*" {
    permission java.security.AllPermission "", "";
};

// required for new PolicyFile provider.
grant codebase "file:${{java.ext.dirs}}${/}-" {
    permission java.security.AllPermission "", "";
};

// Discovery providers that don't perform authentication don't grant
// DeSerializationPermission, so it's granted here.
grant codebase "http://*/reggie-dl.jar" {
    permission org.apache.river.api.io.DeSerializationPermission "ATOMIC";
    permission org.apache.river.api.io.DeSerializationPermission "MARSHALL";
};

// Discovery providers that don't perform authentication don't grant
// DeSerializationPermission, so it's granted here.
grant codebase "http://*/norm-dl.jar" {
    permission org.apache.river.api.io.DeSerializationPermission "ATOMIC";
    permission org.apache.river.api.io.DeSerializationPermission "MARSHALL";
};

// Discovery providers that don't perform authentication don't grant
// DeSerializationPermission, so it's granted here.
grant codebase "http://*/mercury-dl.jar" {
    permission org.apache.river.api.io.DeSerializationPermission "ATOMIC";
    permission org.apache.river.api.io.DeSerializationPermission "MARSHALL";
};

// Discovery providers that don't perform authentication don't grant
// DeSerializationPermission, so it's granted here.
grant codebase "http://*/mahalo-dl.jar" {
    permission org.apache.river.api.io.DeSerializationPermission "ATOMIC";
    permission org.apache.river.api.io.DeSerializationPermission "MARSHALL";
};

// Discovery providers that don't perform authentication don't grant
// DeSerializationPermission, so it's granted here.
grant codebase "http://*/fiddler-dl.jar" {
    permission org.apache.river.api.io.DeSerializationPermission "ATOMIC";
    permission org.apache.river.api.io.DeSerializationPermission "MARSHALL";
};

// Discovery providers that don't perform authentication don't grant
// DeSerializationPermission, so it's granted here.
grant codebase "http://*/outrigger-dl.jar" {
    permission org.apache.river.api.io.DeSerializationPermission "ATOMIC";
    permission org.apache.river.api.io.DeSerializationPermission "MARSHALL";
};

// Discovery providers that don't perform authentication don't grant
// DeSerializationPermission, so it's granted here.
grant codebase "http://*/jsk-dl.jar" {
    permission org.apache.river.api.io.DeSerializationPermission "ATOMIC";
    permission org.apache.river.api.io.DeSerializationPermission "MARSHALL";
    permission org.apache.river.api.io.DeSerializationPermission "ENTRY";
};

grant codebase "http://*/phoenix-dl.jar" {
    permission org.apache.river.api.io.DeSerializationPermission "ATOMIC";
    permission org.apache.river.api.io.DeSerializationPermission "MARSHALL";
};

// Discovery providers that don't perform authentication don't grant
// DeSerializationPermission, so it's granted here.
grant codebase "http://*/qa1-lookup-simulator-dl.jar" {
    permission org.apache.river.api.io.DeSerializationPermission "ATOMIC";
};

grant codebase "http://*/qa1-mercury-dl.jar" {
    permission org.apache.river.api.io.DeSerializationPermission "ATOMIC";
};

grant codebase "http://*/qa1-discoveryservice-dl.jar" {
    permission org.apache.river.api.io.DeSerializationPermission "ATOMIC";
};
grant codebase "http://*/qa1-fiddler-dl.jar" {
    permission org.apache.river.api.io.DeSerializationPermission "ATOMIC";
};
grant codebase "http://*/qa1-io-util-dl.jar" {
    permission org.apache.river.api.io.DeSerializationPermission "ATOMIC";
};
grant codebase "http://*/qa1-lookupservice-dl.jar" {
    permission org.apache.river.api.io.DeSerializationPermission "ATOMIC";
};
grant codebase "http://*/qa1-norm-dl.jar" {
    permission org.apache.river.api.io.DeSerializationPermission "ATOMIC";
};
grant codebase "http://*/qa1-reggie-race-dl.jar" {
    permission org.apache.river.api.io.DeSerializationPermission "ATOMIC";
};
grant codebase "http://*/qa1-renewalservice-dl.jar" {
    permission org.apache.river.api.io.DeSerializationPermission "ATOMIC";
};
grant codebase "http://*/qa1-servicediscovery-dl.jar" {
    permission org.apache.river.api.io.DeSerializationPermission "ATOMIC";
};
grant codebase "http://*/qa1-share-dl.jar" {
    permission org.apache.river.api.io.DeSerializationPermission "ATOMIC";
};
grant codebase "http://*/qa1-start-cb1-dl.jar" {
    permission org.apache.river.api.io.DeSerializationPermission "ATOMIC";
};
grant codebase "http://*/qa1-start-cb2-dl.jar" {
    permission org.apache.river.api.io.DeSerializationPermission "ATOMIC";
};
grant codebase "http://*/qa1-start-cb3-dl.jar" {
    permission org.apache.river.api.io.DeSerializationPermission "ATOMIC";
};
grant codebase "http://*/qa1-start-probe-dl.jar" {
    permission org.apache.river.api.io.DeSerializationPermission "ATOMIC";
};
grant codebase "http://*/qa1-start-testservice-common-dl.jar" {
    permission org.apache.river.api.io.DeSerializationPermission "ATOMIC";
};
grant codebase "http://*/qa1-start-testservice1-dl.jar" {
    permission org.apache.river.api.io.DeSerializationPermission "ATOMIC";
};
grant codebase "http://*/qa1-start-testservice2-dl.jar" {
    permission org.apache.river.api.io.DeSerializationPermission "ATOMIC";
};
grant codebase "http://*/qa1-start-testservicenocons-dl.jar" {
    permission org.apache.river.api.io.DeSerializationPermission "ATOMIC";
};
grant codebase "http://*/qa1-share-dl.jar" {
    permission org.apache.river.api.io.DeSerializationPermission "ATOMIC";
};

grant codebase "file:${org.apache.river.jsk.home}${/}lib${/}jsk-platform.jar" {
    permission java.security.AllPermission "", "";
};

grant codebase "file:${org.apache.river.jsk.home}${/}lib${/}jsk-lib.jar" {
    permission java.security.AllPermission "", "";
};

grant codebase "file:${org.apache.river.jsk.home}${/}lib${/}jini-ext.jar" {
    permission java.security.AllPermission "", "";
};

grant codebase "file:${org.apache.river.jsk.home}${/}lib${/}high-scale-lib.jar" {
    permission java.lang.RuntimePermission "accessDeclaredMembers";
    permission java.lang.RuntimePermission "accessClassInPackage.sun.misc";
    permission java.lang.reflect.ReflectPermission "suppressAccessChecks";
};

grant codebase "file:${org.apache.river.jsk.home}${/}lib${/}custard-apple-1.0.3.jar" {
    permission java.lang.RuntimePermission "modifyThreadGroup";
    permission java.lang.RuntimePermission "setContextClassLoader";
    permission java.lang.RuntimePermission "modifyThread";
};

grant codebase "file:${org.apache.river.qa.harness.harnessJar}" {
    permission java.security.AllPermission "", "";
};

grant codebase "file:${org.apache.river.qa.harness.testJar}" {
    permission java.security.AllPermission "", "";
};

grant codebase "file:${org.apache.river.qa.home}${/}lib${/}qa1-jini-latest.jar" {
    permission java.security.AllPermission "", "";
};

grant codebase "file:${org.apache.river.qa.home}${/}lib${/}jiniharness.jar" {
    permission java.security.AllPermission "", "";
};

grant codebase "file:${org.apache.river.qa.home}${/}lib${/}qa1-start-tests.jar" {
    permission java.security.AllPermission "", "";
};

grant codebase "file:${org.apache.river.qa.home}${/}lib${/}qa1-io-marshalledinstance-test.jar" {
    permission java.security.AllPermission "", "";
};

grant codebase "file:${org.apache.river.qa.home}${/}lib${/}qa1-io-marshalinputstream-test.jar" {
    permission java.security.AllPermission "", "";
};

// needed by various proxies

grant {
    permission java.lang.RuntimePermission "accessClassInPackage.sun.util.logging.resources";
    permission java.lang.RuntimePermission "accessClassInPackage.sun.security.util";
    permission java.lang.RuntimePermission "accessClassInPackage.jdk.internal.misc";
    permission java.lang.RuntimePermission "accessClassInPackage.sun.security.ssl";
    permission java.lang.RuntimePermission "accessClassInPackage.sun.security.action";
    permission java.lang.RuntimePermission "getClassLoader";
    permission java.io.FilePermission "${org.apache.river.jsk.home}${/}lib${/}-", "read";
    permission java.io.FilePermission "${org.apache.river.qa.home}${/}lib${/}-", "read";
    permission java.util.PropertyPermission "*", "read";
    permission java.util.PropertyPermission "org.apache.river.reggie.enableImplToStubReplacement", "read";
    permission java.lang.RuntimePermission "accessClassInPackage.com.sun.proxy";
    permission java.lang.reflect.ReflectPermission "newProxyInPackage.org.apache.river.reggie";
    permission java.lang.reflect.ReflectPermission "newProxyInPackage.org.apache.river.norm";
    permission java.lang.reflect.ReflectPermission "newProxyInPackage.org.apache.river.outrigger";
    permission java.lang.reflect.ReflectPermission "newProxyInPackage.org.apache.river.mercury";
    permission java.lang.reflect.ReflectPermission "newProxyInPackage.org.apache.river.fiddler";
    permission java.net.NetPermission "getNetworkInformation";
};

//JDK9
//grant codebase "jrt:/jdk.security.auth" {
//    permission java.io.FilePermission "${org.apache.river.test.home}${/}src${/}org${/}apache${/}river${/}test${/}spec${/}jeri${/}transport${/}resources${/}keystore.password", "read";
//    permission java.io.FilePermission "${org.apache.river.test.home}${/}src${/}org${/}apache${/}river${/}test${/}spec${/}jeri${/}transport${/}resources${/}keystore", "read";
//    permission javax.security.auth.AuthPermission "modifyPrincipals";
//    permission javax.security.auth.AuthPermission "modifyPublicCredentials";
//    permission javax.security.auth.AuthPermission "modifyPrivateCredentials";
//};

// needed by some io tests

grant {
    permission java.lang.RuntimePermission "setIO";
    permission java.lang.RuntimePermission "setFactory";
    permission java.net.SocketPermission "*:1024-",    "connect,accept";
    permission java.util.PropertyPermission "org.apache.river.test.spec.io.util.FakeIntegrityVerifier.throwException", "write";
};

// needed when using a SecurityManager from command line

grant {
    permission java.io.FilePermission "-", "read";
};

grant {
      permission org.apache.river.phoenix.ExecOptionPermission "*";
    // for a start test
      permission org.apache.river.phoenix.ExecPermission "/bin/javax";
};
